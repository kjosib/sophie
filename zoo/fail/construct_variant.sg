# Consider a bipartite type, such as an alternating list:
type:
critter[x,y] is case:
    um(a:x, b:critter[y,x]);
    nope;
esac;

define:
# The natural map-type function for this would need two function-arguments and a critter.

cmap(fa, fb, cs) = case cs:
    nope -> nope;
    um -> critter(fa(cs.a), cmap(fb, fa, cs.b));  # Mistake: Cannot create variant "critter"; must create subtype.
esac;

end.


