# Complex-Number Arithmetic

type:

complex is (re:number, im:number);

assume:

a, b, c: complex;
r: number;

define:

# This set of definitions would exercise double-dispatch:

operator + (a,b) = complex(a.re+b.re, a.im+b.im);
operator - (a,b) = complex(a.re-b.re, a.im-b.im);
operator * (a,b) = complex(a.re*b.re - a.im*b.im, a.im*b.re + b.im*a.re);
operator / (a,b) = a*conjugate(b) / squared_magnitude(b);
operator / (a,r) = complex(a.re/r, a.im/r);

conjugate(a) = complex(a.re, -a.im);

# Here's a definition to exercise single dispatch:

operator - (a) = complex(-a.re, -a.im);

# Sophie will do without implicit promotion rules, at least for now.

squared_magnitude(c) = c.re*c.re + c.im*c.im;
