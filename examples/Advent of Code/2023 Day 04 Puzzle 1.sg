import:

"common" (surely, either, slice);

assume:
s : string;

define:

score(line) = 2 ^ (nr_winning-1) if nr_winning>0 else 0 where
	winning_numbers = nums_in(mid(line, 10, 29));
	numbers_you_have = nums_in(mid(line, 42, 74));
	nr_winning = length(filter(is_winning, numbers_you_have));
	is_winning(nr) = contains(nr, winning_numbers);
end score;

contains(x, xs) = case xs of
	nil -> no;
	cons -> xs.head == x or contains(x, xs.tail);
esac;

goal(lines) = sum(map(score, lines));

nums_in(s) = map(surely, map(val, split_on_whitespace(s)));

split_on_whitespace(s) = split_on_whitespace_at(0, s);

split_on_whitespace_at(offset, s) = case
	when offset >= len(s) then nil;
	when is_space_at(offset) then split_on_whitespace_at(offset+1, s);
	else cons(slice(s, offset, after), split_on_whitespace_at(after, s));
esac where
	is_space_at(i) = is_space(mid(s, i, 1));
	after = either(first(is_space_at, iota(offset+1, len(s))), len(s));
end split_on_whitespace_at;

is_space(ch) = ch == " ";

solve(lines) = console ! echo[str(goal(lines)), EOL];

begin:

filesystem!read_lines("/playground/advent of code/2023-d4", !solve);

