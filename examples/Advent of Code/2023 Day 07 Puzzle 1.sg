# Day seven is about (modified) poker hands.
# But it also covers sorting, lexical order, and tie-breaking comparison.
# It is now officially time to start adding the spaceship (comparison) operator.

# Incidentally, this program illustrated a serious space-time trade-off.
# Initially I was recalculating the class of a hand for each comparison in the sort routine.
# I adjusted the architecture to compute the hand-class once up front and store it as
# part of the game-record. That sped things up by more than an order of magnitude.

import:
"common"(split_on_whitespace);
"2023 Day 07 common"(histogram, sort, goal, sample_games, organize, run);

assume:
hand:list[number];
card:string;
e:entry;


define:

# The first observation is the rank of a card, generally given as a single-letter string.
card_rank(card) = ord(card) - ord('0') if ord(card)<=ord('9') else find_index(10, card, faces);
find_index(strict offset, needle, haystack) = case haystack of
	nil -> offset;
	cons -> offset if haystack.head == needle else find_index(offset+1, needle, haystack.tail);
esac;
faces = each_chr("TJQKA");

begin:

goal(card_rank, organize, sample_games);
run(card_rank, organize);


