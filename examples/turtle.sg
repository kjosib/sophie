# --- Some turtle designs. ---

# Feel free to send your favorite designs to: kjosib@gmail.com
# or submit a pull request to the repository.
# I need to know two things:
#   1. That you have the right to submit the design as either public-domain or your own original work.
#   2. How you'd like your name to appear in the credits for inclusion of your work.

define:
    repeat(n, portion) = nil if n < 1 else cat(portion, repeat(n-1, portion));
    range(a, b) = nil if a > b else cons(a, range(a+1, b));
    cycle(xs) = cat(xs, cycle(xs));  # You can have an infinite list as long as you don't try to use the whole thing.
    map2(fn, xs, ys) = case xs:  # Work-around for lack of proper zip/apply forms.
        nil -> nil;
        cons -> case ys:
            nil -> nil;
            cons -> cons(fn(xs.head, ys.head), map2(fn, xs.tail, ys.tail));
       esac;
   esac;

    rainbow = ["red", "#DDDD00", "light green", "cyan", "#0000FF", "#FF00FF"];

    square(size) = repeat(4, [forward(size), right(90)]);

    daisy(k) = repeat(k, cons(right(360/k), square(150)));

    rosette = repeat(12, petal) where
        petal = flat[square(150), [right(15)], square(75), [right(15)]];
    end rosette;

    spiral(k, r) = flat(map(leg, range(1, k))) where
        leg(x) = [forward(x), left(r)];
    end spiral;

    color_spiral(k, r, cs) = flat(map2(leg, range(1,k), cycle(cs))) where
        leg(x, c) = [color(c), forward(x), left(r)];
    end color_spiral;

    koch_curve = cat(prepare, iterate(5, basis)) where
        prepare = [penup, goto(-145, -250), pendown];
        basis = repeat(3, [forward(500), right(120)]);
        iterate(n, curve) = curve if n < 1 else iterate(n-1, flat(map(tweak, curve)));
        tweak(item) = case item:
            forward -> [step, left(60), step, right(120), step, left(60), step];
            else [item];
        esac where
            step = forward(item.distance / 3);
        end tweak;
    end koch_curve;

begin:
    "Daisy:"; drawing(daisy(30));
    "Rosette:"; drawing(rosette);
    "Spiral 1:"; drawing(spiral(180, 61));
    "Spiral 2:"; drawing(spiral(360, 122));
    "Color Spiral:"; drawing(cons(pensize(2), color_spiral(180, 59, rainbow)));
    "Koch Curve:"; drawing(koch_curve);
end.
